1）
folder the for loop. not expend the for loop


e.g
myvideo=mmreader('m11.avi');
get(myvideo);
nFrames = myvideo.NumberOfFrames;
vidHeight = 240;
vidWidth = 320;
% Preallocate movie structure.
mov(1:nFrames) = ...
    struct('cdata', zeros(vidHeight, vidWidth, 3, 'double'),...
           'colormap', []);
% Read one frame at a time.
for k = 1 : nFrames
    mov(k).cdata = read(myvideo, k);
    J=mov(k).cdata;
    switch k
        case 1
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','01','.jpg'),'jpg');
        case 2
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','02','.jpg'),'jpg');
        case 3
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','03','.jpg'),'jpg');
        case 4
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','04','.jpg'),'jpg');
        case 5
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','05','.jpg'),'jpg');
        case 6
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','06','.jpg'),'jpg');
        case 7
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','07','.jpg'),'jpg');
        case 8
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','08','.jpg'),'jpg');
        case 9
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\','09','.jpg'),'jpg');
        otherwise
    imwrite(J,strcat('C:\Users\dingding\Desktop\movie\',int2str(k),'.jpg'),'jpg');   
    end
end

% Size a figure based on the video's width and height.

% Play back the movie once at the video's frame rate.


======================================================





2) folder the functionalities into function
    %input file==================================
    % read movie data of real BM
    %leg
    fileform = 'movie\white\leg\*.jpg';
    filepathsrc = 'movie\white\leg\';
    [whiteleg,legFilmwhite]=tinputimgs(w,fileform,filepathsrc);
%     file = dir(fileform);
%     for i = 1:length(file)
%         moviedata{i} = imread([filepathsrc, file(i).name]);
%     end
%     for i=1:60
%         whiteleg{i}=Screen('MakeTexture',w, moviedata{i});
%         legFilmwhite{i}=Screen('Rect', whiteleg{i});
%     end
    
    %jump
    fileform = 'movie\white\jump\*.jpg';
    filepathsrc = 'movie\white\jump\';
    file = dir(fileform);
    for i = 1:length(file)
        moviedata{i} = imread([filepathsrc, file(i).name]);
    end
    for i=1:60
        whitejump{i}=Screen('MakeTexture',w, moviedata{i});
        jumpFilmwhite{i}=Screen('Rect',  whitejump{i});
    end
    
    %run
    fileform = 'movie\white\run\*.jpg';
    filepathsrc = 'movie\white\run\';
    file = dir(fileform);
    for i = 1:length(file)
        moviedata{i} = imread([filepathsrc, file(i).name]);
    end
    for i=1:60
        whiterun{i}=Screen('MakeTexture',w, moviedata{i});
        runFilmwhite{i}=Screen('Rect', whiterun{i});
    end
    
    %turn
    fileform = 'movie\white\turn\*.jpg';
    filepathsrc = 'movie\white\turn\';
    file = dir(fileform);
    for i = 1:length(file)
        moviedata{i} = imread([filepathsrc, file(i).name]);
    end
    for i=1:60
        whiteturn{i}=Screen('MakeTexture',w, moviedata{i});
        turnFilmwhite{i}=Screen('Rect',  whiteturn{i});
    end
    
    %wave
    fileform = 'movie\white\wave\*.jpg';
    filepathsrc = 'movie\white\wave\';
    file = dir(fileform);
    for i = 1:length(file)
        moviedata{i} = imread([filepathsrc, file(i).name]);
    end
    for i=1:60
        whitewave{i}=Screen('MakeTexture',w, moviedata{i});
        waveFilmwhite{i}=Screen('Rect', whitewave{i});
    end
    
     %geo
    fileform = 'movie\white\geo\*.jpg';
    filepathsrc = 'movie\white\geo\';
    file = dir(fileform);
    for i = 1:length(file)
        moviedata{i} = imread([filepathsrc, file(i).name]);
    end
    for i=1:60
        whitegeo{i}=Screen('MakeTexture',w, moviedata{i});
        geoFilmwhite{i}=Screen('Rect', whitegeo{i});
    end



======================================================




3) wrapper relevant seperate parameters into a structure 
    % ftvfilename = 'walking.txt'
    % 读入FTV生物运动数据
    %InputIndex=randperm(240); %返回 1~240 整数的一个随机排列
    trackFile=fopen(ftvfilename); %打开相应的文件
    fileContent = textscan(trackFile, '%s');%以数组形式读入数据   %3.1f 表示3个字符宽，小数点后一位
    %C = textscan(fid, '%s%s%f32%d8%u%f%f%s%f');多少个就表示多少个一列
    movie= fileContent{1};%大括号表示元胞数组，类似于结构
    fclose(trackFile);
    % 参数设置
    maxdist=163.0;
    factor=4.0;
    distance=0;
    square_width2=5; %运动点的像素大小
    % zoomIndex=5; %原来点的坐标可能是比较小的，放大几倍来呈现，可以方便在不同的实验中用
    dotsPerFrame=13;%每一帧一共有13个点
    totalFrames=str2double(movie());
    dimver=1118;% 一共多少行数据
    dimhor=3; %三维的坐标
    framesPerCycle=dimver/dotsPerFrame;

    coordinate=zeros(dimver,dimhor);
    counterSize=1;
    for ver_counter=1:dimver
        for hor_counter=1:dimhor
            coordinate(ver_counter,hor_counter)=totalFrames(counterSize);
            counterSize=counterSize+1;
        end;
    end;



=============================================================



4) merge duplicate functionality to function and parameterize the difference


    % 学习阶段 远离
    distance_pra_FA=-maxdist;
    angle_FA=(2.0*atan(factor*maxdist/(2.0*abs(distance_pra_FA))))*180.0/pi;
    Screen('BeginOpenGL',w);
    ar=RectHeight(wRect)/RectWidth(wRect);
    glViewport(0, 0, RectWidth(wRect), RectHeight(wRect));
    glColor3f(1,1,0);
    glEnable(GL.LIGHT0);
    glEnable(GL.BLEND);
    glBlendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);
    glMatrixMode(GL.PROJECTION);
    glLoadIdentity;
    %
    gluPerspective(angle_FA, 1/ar, 0.1, 3000);
    %
    glMatrixMode(GL.MODELVIEW);
    glLoadIdentity;
    glLightfv(GL.LIGHT0,GL.POSITION,[ 1 2 3 0 ]);
    %
    gluLookAt(0,0,-distance_pra_FA,0,0,0,0,1,0);
    %
    glClearColor(0,0,0,0);
    glClear;
    Screen('EndOpenGL',w);
    for repeat1=1:3
        for i=1:framesPerCycle
            for j=1:dotsPerFrame
                moglDrawDots3D(w,[coordinate((i-1)*dotsPerFrame+j,2) coordinate((i-1)*dotsPerFrame+j,3) coordinate((i-1)*dotsPerFrame+j,1)], square_width2, [255 255 255 255],[],1);
            end
            Screen('Flip',w);
        end
    end
    
    Screen('DrawTexture', w, FW, [], pos);
    Screen('Flip',w);
    KbWait;
    
    % 学习阶段 趋近
    distance_pra_FTV=-maxdist*20;
    angle_FTV=(2.0*atan(factor*maxdist/(2.0*abs(distance_pra_FTV))))*180.0/pi;
    Screen('BeginOpenGL',w);
    ar=RectHeight(wRect)/RectWidth(wRect);
    glViewport(0, 0, RectWidth(wRect), RectHeight(wRect));
    glColor3f(1,1,0);
    glEnable(GL.LIGHT0);
    glEnable(GL.BLEND);
    glBlendFunc(GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA);
    glMatrixMode(GL.PROJECTION);
    glLoadIdentity;
    %
    gluPerspective(angle_FTV, 1/ar, 0.1, 4000);
    %
    glMatrixMode(GL.MODELVIEW);
    glLoadIdentity;
    glLightfv(GL.LIGHT0,GL.POSITION,[ 1 2 3 0 ]);
    %
    gluLookAt(0,0,-distance_pra_FTV,0,0,0,0,1,0);
    %
    glClearColor(0,0,0,0);
    glClear;
    Screen('EndOpenGL',w);
    for repeat1=1:3
        for i=1:framesPerCycle
            for j=1:dotsPerFrame
                moglDrawDots3D(w,[coordinate((i-1)*dotsPerFrame+j,2) coordinate((i-1)*dotsPerFrame+j,3) coordinate((i-1)*dotsPerFrame+j,1)], square_width2, [255 255 255 255],[],1);
            end
            Screen('Flip',w);
        end
    end
    Screen('DrawTexture', w, FTV, [], pos);
    Screen('Flip',w);
    KbWait;


=====================================================================


5 combine similar code to the exist functions




=====================================================================
6 writing code is for future review and human read
  编写代码是为了人类阅读！ 

7 如何计算ACC
  公式：response_code(j)==str2num(condition{j}(3))+1
  
  对于bm change 条件 condition{j}(3)=1，
  按F键,则回答正确response_code(j)=2
  response_code(j)==str2num(condition{j}(3))+1
  2==1+1，则acc=1
  
  按J键，则回答错误response_code(j)=1
  response_code(j)==str2num(condition{j}(3))+1
  1==1+1，则acc=0
  

  

  

